x-common-env: &common-env
  ENVIRONMENT: prod
  OPENAI_API_KEY: ${OPENAI_API_KEY}

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - backend

  django:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      <<: *common-env
      API_KEY: ${API_KEY}
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      SERVER: django
    ports:
      - "8000:8000"
    networks:
      - backend
    depends_on:
      - redis
    command: ["python", "/app/entrypoint.py"]

  celery-worker:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment: *common-env
    depends_on:
      - redis
    networks:
      - backend
    command: celery -A rptu4you worker --loglevel=info
    user: "1001"

  celery-beat:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    depends_on:
      - redis
    networks:
      - backend
    command: celery -A rptu4you beat --loglevel=info
    user: "1001"

  flower:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    command: celery -A rptu4you flower --port=5555 --address=0.0.0.0
    depends_on:
      - redis
    networks:
      - backend
    ports:
      - "5555:5555"
    user: "1001"

  scraper:
    build:
      context: .
      dockerfile: webscraper/Dockerfile
    environment:
      - API_KEY=${API_KEY}
      - IMAP_SERVER=${IMAP_SERVER}
      - IMAP_PORT=${IMAP_PORT}
      - IMAP_USERNAME=${IMAP_USERNAME}
      - IMAP_PASSWORD=${IMAP_PASSWORD}
    networks:
      - backend
    command: [python, "/app/scheduler.py"]

networks:
  backend:

volumes:
  db_data:
